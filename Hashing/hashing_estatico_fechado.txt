//Casas vazias e virgem: -1;
//Casas vazias e pré-ocupadas: -2;

//---tad.c---//

void inicializa(int T[]){
    for (int i = 0; i<B; i++)
        T[i] = -1;
}

int inserir(int T[], int k){
    int i,j;

    for(i=0; i<B; i++){
        j = h(k,i);
        if (T[i] == -1 || T[i] == -2){
            T[j] = k;
            return j;
        }        
    }

    return -1;
}

int remover(int T[], int k){
    int i,j;

    for(i=0; i<B; i++){
        j = h(k,i);
        if (T[j] == k){
            T[j] = -2;
            return j;
        }
        else if (T[j] == -1) return -1;
    }

    return -1;
}

//---main.c---//
#define B 5
#define h(k,i) (k+i)%B //função macro
    /*int h(int k, int i){
        return (k+i)%B;
    }*/


int main(void){
    int T[B];
    inicializa(T);

    ...
}
